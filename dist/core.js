function Entity(){return this.id=(+new Date).toString(16)+(1e8*Math.random()|0).toString(16)+World.entities.length,this}function Struct(...t){for(var i of t)this[i]={};return this}function Commands(t){this.entity=t??{},this.saved={},this.spawn=function t(){return this.entity=new Entity,World.add_entity(this.entity),this},this.insert=function t(i){let n=World.entities.findIndex(t=>t.id==this.entity.id);return World.entities[n][i.constructor.name]=i,this},this.query=function t(...i){let n=World.entities;for(var r of i)n=n.filter(t=>null!=t[r().constructor.name]);return n},this.save=function t(){return this.saved=this.entity,this},this.get=function t(){return this.saved},this.inherit=function t(i){return Object.assign(this.entity,i),this}}Struct._=function(t){var i=Function("return function "+t+"(...args) {for(var i in args) this[i] = args[i]; return this};")();return i.structure=function(...i){return Function("return function "+t+"(...args) {var prop ="+JSON.stringify(i)+"; for(var i in prop) this[prop[i]] = args[i]; return this};")()},window[t]=function(...t){return new i(...t)},i};class World{static entities=[];static add_entity(t){World.entities.push(t)}static get(t){return World.entities.filter(i=>i.id==t)[0]}static query(t){return World.entities.filter(t)[0]}}class App{constructor(){this.systems=[],this.resources=[],this.commands=new Commands}add_system(t){return this.systems.push(t.bind(this)),this}run(){for(var t of this.systems)t(this.commands,this.resources)}static new(){return new App}}export{App,World,Struct};